<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd"
	root-name="item5" object-name="workflow:name=generic"
	id="151a8d5b-fb5b-44f9-9f6a-388bab1c148e" version="3.0.3"
	api-version="6.0.0" allowed-operations="vef" editor-version="1.6"
	restartMode="1" resumeFromFailedMode="0">
	<display-name><![CDATA[Create VS]]></display-name>
	<position y="9.545454545454543" x="5.0" />
	<input>
		<param name="name" type="string">
			<description><![CDATA[name]]></description>
		</param>
		<param name="vip" type="string">
			<description><![CDATA[Add virtualservice IP address]]></description>
		</param>
		<param name="controller" type="string">
			<description><![CDATA[vip]]></description>
		</param>
		<param name="server_cloud" type="string">
			<description><![CDATA[server_cloud]]></description>
		</param>
		<param name="pool_servers" type="Array/string">
			<description><![CDATA[pool_servers]]></description>
		</param>
		<param name="create_health_monitor" type="boolean">
			<description><![CDATA[create_health_monitor]]></description>
		</param>
		<param name="health_monitor" type="Array/string">
			<description><![CDATA[health_monitor]]></description>
		</param>
		<param name="application_profile" type="string">
			<description><![CDATA[application_profile]]></description>
		</param>
		<param name="service_port" type="number">
			<description><![CDATA[service_port]]></description>
		</param>
		<param name="SSL_certificate" type="string">
			<description><![CDATA[SSL_certificate]]></description>
		</param>
		<param name="SSL_cert" type="boolean">
			<description><![CDATA[SSL_cert]]></description>
		</param>
		<param name="create_SSL_certificate" type="boolean">
			<description><![CDATA[create_SSL_certificate]]></description>
		</param>
		<param name="add_servers" type="string">
			<description><![CDATA[add_servers]]></description>
		</param>
		<param name="ip_group" type="string">
			<description><![CDATA[ip_group]]></description>
		</param>
		<param name="network" type="string">
			<description><![CDATA[network]]></description>
		</param>
		<param name="add_existing_server_ips" type="boolean">
			<description><![CDATA[add_existing_server_ips]]></description>
		</param>
		<param name="pg_name" type="string">
			<description><![CDATA[pg_name]]></description>
		</param>
		<param name="service_engine" type="string">
			<description><![CDATA[service_engine]]></description>
		</param>
		<param name="fail_action_type" type="string">
			<description><![CDATA[fail_action_type]]></description>
		</param>
		<param name="pool_or_pool_group" type="boolean">
			<description><![CDATA[pool_or_pool_group]]></description>
		</param>
		<param name="lb_algorithm" type="string">
			<description><![CDATA[lb_algorithm]]></description>
		</param>
		<param name="lb_consistent_hash" type="string">
			<description><![CDATA[lb_consistent_hash]]></description>
		</param>
		<param name="lb_custom_header_name" type="string">
			<description><![CDATA[lb_custom_header_name]]></description>
		</param>
		<param name="use_existing_vs_vip" type="boolean">
			<description><![CDATA[vs_vip]]></description>
		</param>
		<param name="existing_vip" type="string">
			<description><![CDATA[existing_vip]]></description>
		</param>
		<param name="server_type" type="string">
			<description><![CDATA[server_type]]></description>
		</param>
		<param name="status_code" type="string">
			<description><![CDATA[status_code]]></description>
		</param>
		<param name="protocol" type="string">
			<description><![CDATA[protocol]]></description>
		</param>
		<param name="fail_action_URL" type="string">
			<description><![CDATA[fail_action_URL]]></description>
		</param>
		<param name="health_monitor_type" type="string">
			<description><![CDATA[health_monitor_type]]></description>
		</param>
		<param name="command" type="string">
			<description><![CDATA[command]]></description>
		</param>
		<param name="request" type="string">
			<description><![CDATA[request]]></description>
		</param>
		<param name="http_response_code" type="Array/string">
			<description><![CDATA[http_response_code]]></description>
		</param>
		<param name="https_response_code" type="Array/string">
			<description><![CDATA[https response code]]></description>
		</param>
		<param name="port" type="string">
			<description><![CDATA[port]]></description>
		</param>
		<param name="persistence_profile_ref" type="string">
			<description><![CDATA[persistence_profile_ref]]></description>
		</param>
		<param name="SSL_algorithm" type="string">
			<description><![CDATA[SSL_algorithm]]></description>
		</param>
		<param name="common_name" type="string">
			<description><![CDATA[common_name]]></description>
		</param>
		<param name="RSA_key_size" type="string">
			<description><![CDATA[RSA_key_size]]></description>
		</param>
		<param name="EC_key_size" type="string">
			<description><![CDATA[EC_key_size]]></description>
		</param>
		<param name="tier1_lr" type="string">
			<description><![CDATA[tier1_lr]]></description>
		</param>
		<param name="add_persistence_profile_ref" type="boolean">
			<description><![CDATA[add_persistence_profile_ref]]></description>
		</param>
		<param name="health_monitor_uuid" type="string">
            <description><![CDATA[Health Monitor Uuid]]></description>
        </param>
        <param name="pool_uuid" type="string">
            <description><![CDATA[Pool Uuid]]></description>
        </param>
        <param name="vsvip_uuid" type="string">
            <description><![CDATA[VsVip Uuid]]></description>
        </param>
        <param name="virtual_service_uuid" type="string">
            <description><![CDATA[Virtual Service Uuid]]></description>
        </param>
	</input>
	<attrib name="configErrorCode" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="actionEerrorCode" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="poolgroupName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Set the poolgroup name]]></description>
	</attrib>
	<attrib name="enabled" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[true]]></value>
		<description><![CDATA[Enabled]]></description>
	</attrib>
	<attrib name="HealthMonitorName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Set the healthmonitor name ]]></description>
	</attrib>
	<attrib name="CertName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Set the SSL certificate name]]></description>
	</attrib>
	<attrib name="version" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[AVI api version]]></description>
	</attrib>
	<attrib name="poolName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Set the pool name]]></description>
	</attrib>
	<attrib name="vsVipName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="Tenant" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Tenant]]></description>
	</attrib>
	<attrib name="workflowRuntime" type="Avi:WorkflowRuntime"
		read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
	</attrib>
	<attrib name="createdObj" type="Any" read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
	</attrib>
	<workflow-item name="item0"
		throw-bind-name="actionEerrorCode" type="end" end-mode="0">
		<in-binding />
		<position y="63.59090909090908" x="944.5" />
	</workflow-item>
	<workflow-item name="item6" out-name="item8"
		throw-bind-name="configErrorCode" type="task">
		<display-name><![CDATA[AVIObjectName]]></display-name>
		<script encoded="false"><![CDATA[HealthMonitorName = Name+"_HealthMonitor"
vsVipName = Name+"_vsvip"
poolName = Name+"_pool"
CertName = Name+"_SSLCertificate"
Tenant=workflowRuntime.getAviVroClient().cred.tenant;
version=workflowRuntime.getAviVroClient().cred.version;


]]></script>
		<in-binding>
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName" />
			<bind name="Name" type="string" export-name="name" />
			<bind name="poolName" type="string" export-name="poolName" />
			<bind name="version" type="string" export-name="version" />
			<bind name="CertName" type="string" export-name="CertName" />
		</in-binding>
		<out-binding>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName" />
			<bind name="poolName" type="string" export-name="poolName" />
			<bind name="vsVipName" type="string" export-name="vsVipName" />
			<bind name="Tenant" type="string" export-name="Tenant" />
			<bind name="version" type="string" export-name="version" />
			<bind name="CertName" type="string" export-name="CertName" />
		</out-binding>
		<position y="73.59090909090908" x="104.5" />
	</workflow-item>
	<workflow-item name="item2" out-name="item0" type="task">
		<display-name><![CDATA[createObject]]></display-name>
		<script encoded="false"><![CDATA[System.log("Object Created:-> "+result);
]]></script>
		<in-binding>
			<bind name="result" type="Any" export-name="createdObj" />
		</in-binding>
		<out-binding />
		<position y="19.045454545454543" x="904.5" />
	</workflow-item>
	<workflow-item name="item5" out-name="item6" type="task"
		script-module="com.vmware.avi/initVroWorkflow">
		<display-name><![CDATA[initVroWorkflow]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").initVroWorkflow(controller) ;]]></script>
		<in-binding>
			<bind name="controller" type="string" export-name="controller">
				<description><![CDATA[Controller IP]]></description>
			</bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
		</out-binding>
		<position y="19.045454545454543" x="104.5" />
	</workflow-item>
	<workflow-item name="item4" out-name="item7" type="task"
		script-module="com.vmware.avi/createHealthMonitorObj">
		<display-name><![CDATA[createHealthMonitorObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createHealthMonitorObj(healthMonitorType,hm_type,hm_name,hm_description,is_federated,monitor_port,time_out,send_interval,successful_check,failed_check,command_code,udp_request,dns_query_name,http_response_code,tcp_request,tcp_response,tcp_half_open,maintenance_code,workflowRuntime,https_response_code, Tenant, health_monitor_uuid) ;]]></script>
		<in-binding>
			<bind name="healthMonitorType" type="string"
				export-name="health_monitor_type">
				<description><![CDATA[Health monitor type]]></description>
			</bind>
			<bind name="hm_type" type="string"
				export-name="health_monitor_type">
				<description><![CDATA[Health monitor type]]></description>
			</bind>
			<bind name="hm_name" type="string"
				export-name="HealthMonitorName">
				<description><![CDATA[Health monitor name]]></description>
			</bind>
			<bind name="hm_description" type="string">
				<description><![CDATA[Health monitor description]]></description>
			</bind>
			<bind name="is_federated" type="boolean">
				<description><![CDATA[is federated]]></description>
			</bind>
			<bind name="monitor_port" type="number">
				<description><![CDATA[Monitor port]]></description>
			</bind>
			<bind name="time_out" type="number">
				<description><![CDATA[Time out]]></description>
			</bind>
			<bind name="send_interval" type="number">
				<description><![CDATA[Send interval]]></description>
			</bind>
			<bind name="successful_check" type="number">
				<description><![CDATA[Successful Check]]></description>
			</bind>
			<bind name="failed_check" type="number">
				<description><![CDATA[Failed check]]></description>
			</bind>
			<bind name="command_code" type="string" export-name="command">
				<description><![CDATA[Command code]]></description>
			</bind>
			<bind name="udp_request" type="string" export-name="request">
				<description><![CDATA[UDP request]]></description>
			</bind>
			<bind name="dns_query_name" type="string" export-name="request">
				<description><![CDATA[DNS query name]]></description>
			</bind>
			<bind name="http_response_code" type="Array/string"
				export-name="http_response_code">
				<description><![CDATA[HTTP Response code]]></description>
			</bind>
			<bind name="tcp_request" type="string" export-name="request">
				<description><![CDATA[TCP request]]></description>
			</bind>
			<bind name="tcp_response" type="string">
				<description><![CDATA[TCP Response]]></description>
			</bind>
			<bind name="tcp_half_open" type="boolean">
				<description><![CDATA[TCP half open]]></description>
			</bind>
			<bind name="maintenance_code" type="string">
				<description><![CDATA[Maintenance code]]></description>
			</bind>
			<bind name="https_response_code" type="Array/string"
				export-name="https_response_code">
				<description><![CDATA[https response code]]></description>
			</bind>
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name]]></description>
			</bind>
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
			<bind name="health_monitor_uuid" type="string"
                export-name="health_monitor_uuid">
                <description><![CDATA[Uuid of health monitor object]]></description>
            </bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
		</out-binding>
		<position y="19.045454545454543" x="244.5" />
	</workflow-item>
	<workflow-item name="item7" out-name="item3" type="task"
		script-module="com.vmware.avi/createPoolObj">
		<display-name><![CDATA[createPoolObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createPoolObj(PoolServers,enablePool,CreateHealthMonitor,poolName,defaultServerPort,loadBalancerAlgo,serverType,lbConsistentHash,lbCustomHeaderName,ServerCloud,Tenant,HealthMonitorName,healthMonitor,Version,activePassiveHM,capacityEstimation,capacityEstimationThresh,cloudConfigCksum,deleteServerRefresh,gracefulDisableTimeout,hostCheckEnabled,lookupServerByName,rewriteHostHeaderServerName,maxConcurrentConnectionsPerServer,domainName,fewestTasksFeedbackDelay,connectionRampDuration,upstreamConnpoolConnIdleTmo,upstreamConnpoolConnLifeTmo,upstreamConnpoolConnMaxReuse,upstreamConnpoolServerMaxCache,requestQueueEnabled,useServicePort,sniEnabled,serverTimeout,enableRealtimeMetrics,statusCode,failActionURL,statusProtocol,failActiontype,workflowRuntime,PersistenceProfileRef,ratio,port,addPersistenceProfileRef,tier1_lr, pool_uuid) ;]]></script>
		<in-binding>
			<bind name="PoolServers" type="Array/string"
				export-name="pool_servers">
				<description><![CDATA[Pool servers list ]]></description>
			</bind>
			<bind name="enablePool" type="boolean">
				<description><![CDATA[Pool status]]></description>
			</bind>
			<bind name="CreateHealthMonitor" type="boolean"
				export-name="create_health_monitor">
				<description><![CDATA[Check create healthmonitor or not]]></description>
			</bind>
			<bind name="poolName" type="string" export-name="poolName">
				<description><![CDATA[Pool name]]></description>
			</bind>
			<bind name="defaultServerPort" type="string">
				<description><![CDATA[Default server port]]></description>
			</bind>
			<bind name="loadBalancerAlgo" type="string"
				export-name="lb_algorithm">
				<description><![CDATA[Pool LB algorithm type]]></description>
			</bind>
			<bind name="serverType" type="string" export-name="server_type">
				<description><![CDATA[Server type]]></description>
			</bind>
			<bind name="lbConsistentHash" type="string"
				export-name="lb_consistent_hash">
				<description><![CDATA[Consistent hash data for load balancer algorithm type is consistent hash]]></description>
			</bind>
			<bind name="lbCustomHeaderName" type="string"
				export-name="lb_custom_header_name">
				<description><![CDATA[Custom headers consistent hash type]]></description>
			</bind>
			<bind name="ServerCloud" type="string"
				export-name="server_cloud">
				<description><![CDATA[Servercloud name]]></description>
			</bind>
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name]]></description>
			</bind>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName">
				<description><![CDATA[New healthmonitor name]]></description>
			</bind>
			<bind name="healthMonitor" type="Array/string"
				export-name="health_monitor">
				<description><![CDATA[List of existing healthmonitors name]]></description>
			</bind>
			<bind name="Version" type="string" export-name="version">
				<description><![CDATA[Avi api version]]></description>
			</bind>
			<bind name="activePassiveHM" type="boolean">
				<description><![CDATA[Active passive healthmonitor]]></description>
			</bind>
			<bind name="capacityEstimation" type="boolean">
				<description><![CDATA[Add capacity estimation]]></description>
			</bind>
			<bind name="capacityEstimationThresh" type="number">
				<description><![CDATA[Add capacity estimation thresh]]></description>
			</bind>
			<bind name="cloudConfigCksum" type="string">
				<description><![CDATA[Add cloud config cksum ]]></description>
			</bind>
			<bind name="deleteServerRefresh" type="boolean">
				<description><![CDATA[Delete server on dns refresh]]></description>
			</bind>
			<bind name="gracefulDisableTimeout" type="number">
				<description><![CDATA[Add graceful disable timeout]]></description>
			</bind>
			<bind name="hostCheckEnabled" type="boolean">
				<description><![CDATA[Add host check enabled]]></description>
			</bind>
			<bind name="lookupServerByName" type="boolean">
				<description><![CDATA[Add lookup server by name]]></description>
			</bind>
			<bind name="rewriteHostHeaderServerName" type="boolean">
				<description><![CDATA[Add rewrite host header server name]]></description>
			</bind>
			<bind name="maxConcurrentConnectionsPerServer" type="number">
				<description><![CDATA[Add max concurrent connections per server]]></description>
			</bind>
			<bind name="domainName" type="string">
				<description><![CDATA[Add domain name]]></description>
			</bind>
			<bind name="fewestTasksFeedbackDelay" type="number">
				<description><![CDATA[Add fewest tasks feedback delay]]></description>
			</bind>
			<bind name="connectionRampDuration" type="number">
				<description><![CDATA[Connection ramp]]></description>
			</bind>
			<bind name="upstreamConnpoolConnIdleTmo" type="number">
				<description><![CDATA[Connection Idle Timeout]]></description>
			</bind>
			<bind name="upstreamConnpoolConnLifeTmo" type="number">
				<description><![CDATA[Connection Life Timeout]]></description>
			</bind>
			<bind name="upstreamConnpoolConnMaxReuse" type="number">
				<description><![CDATA[Connection Max Used Times]]></description>
			</bind>
			<bind name="upstreamConnpoolServerMaxCache" type="number">
				<description><![CDATA[Max Cache Connections Per Server]]></description>
			</bind>
			<bind name="requestQueueEnabled" type="boolean">
				<description><![CDATA[Add request queue enabled]]></description>
			</bind>
			<bind name="useServicePort" type="boolean">
				<description><![CDATA[Disable Port Translation]]></description>
			</bind>
			<bind name="sniEnabled" type="boolean">
				<description><![CDATA[Add sni enabled]]></description>
			</bind>
			<bind name="serverTimeout" type="number">
				<description><![CDATA[Default Server Timeout]]></description>
			</bind>
			<bind name="enableRealtimeMetrics" type="boolean">
				<description><![CDATA[Enable real time metrics]]></description>
			</bind>
			<bind name="statusCode" type="string" export-name="status_code">
				<description><![CDATA[Status code for fail action type of pool]]></description>
			</bind>
			<bind name="failActionURL" type="string"
				export-name="fail_action_URL">
				<description><![CDATA[Redirect url for fail action type of pool]]></description>
			</bind>
			<bind name="statusProtocol" type="string" export-name="protocol">
				<description><![CDATA[Add status protocol for pool fail action]]></description>
			</bind>
			<bind name="failActiontype" type="string"
				export-name="fail_action_type">
				<description><![CDATA[Pool fail action type]]></description>
			</bind>
			<bind name="PersistenceProfileRef" type="string"
				export-name="persistence_profile_ref" />
			<bind name="port" type="string" export-name="port" />
			<bind name="ratio" type="number" />
			<bind name="addPersistenceProfileRef" type="boolean"
				export-name="add_persistence_profile_ref" />
			<bind name="tier1_lr" type="string" export-name="tier1_lr" />
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
			<bind name="pool_uuid" type="string"
                export-name="pool_uuid">
                <description><![CDATA[Uuid of pool object]]></description>
            </bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
		</out-binding>
		<position y="73.59090909090908" x="405.0" />
	</workflow-item>
	<workflow-item name="item3" out-name="item9" type="task"
		script-module="com.vmware.avi/createVsVIPObj">
		<display-name><![CDATA[createVsVIPObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createVsVIPObj(Tenant,name,IPAddress,eastWestPlacement,aviAllocatedFIp,autoAllocateIp,enabled,autoAllocateFloatingIp,aviAllocatedVip,workflowRuntime,tier1,ServerCloud, vsvip_uuid) ;]]></script>
		<in-binding>
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name]]></description>
			</bind>
			<bind name="name" type="string" export-name="vsVipName">
				<description><![CDATA[Vs vip name]]></description>
			</bind>
			<bind name="IPAddress" type="string" export-name="vip">
				<description><![CDATA[Vs vip IP address]]></description>
			</bind>
			<bind name="eastWestPlacement" type="boolean">
				<description><![CDATA[Add east west  placement]]></description>
			</bind>
			<bind name="aviAllocatedFIp" type="boolean">
				<description><![CDATA[Allocate FIP]]></description>
			</bind>
			<bind name="autoAllocateIp" type="boolean">
				<description><![CDATA[Auto allocate IP]]></description>
			</bind>
			<bind name="enabled" type="boolean" export-name="enabled">
				<description><![CDATA[Enabled vsvip]]></description>
			</bind>
			<bind name="autoAllocateFloatingIp" type="boolean">
				<description><![CDATA[Auto allocate floating IP]]></description>
			</bind>
			<bind name="aviAllocatedVip" type="boolean">
				<description><![CDATA[Allocate VIP]]></description>
			</bind>
			<bind name="tier1" type="string" export-name="tier1_lr" />
			<bind name="ServerCloud" type="string"
				export-name="server_cloud" />
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
			<bind name="vsvip_uuid" type="string"
                export-name="vsvip_uuid">
                <description><![CDATA[Uuid of vsvip object]]></description>
            </bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
		</out-binding>
		<position y="19.045454545454543" x="404.5" />
	</workflow-item>
	<workflow-item name="item1" out-name="item10" type="task"
		script-module="com.vmware.avi/createVirtualServiceObj">
		<display-name><![CDATA[createVirtualServiceObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createVirtualServiceObj(Name,poolgroupName,ServerCloud,Tenant,ApplicationProfile,servicePort,SSLCertificate,SSLCert,CertName,CreateSSL,serviceEngine,poolOrPoolgroup,poolName,vsVIP,existingVIP,allowInvalidClientCert,closeClientConfigUpdate,description,enableAutogw,enableRhi,enableRhiSnat,ignPoolNetReach,removeListeningPortOnVsDown,scaleoutEcmp,clientIpAddr,includeURL,excludeURL,addClientLogFliter,enabledClientLog,clientStringRef,clientDuration,logAllClientHeaders,analyticsProfile,clientInsights,significantLogThrottle,udfLogThrottle,nonSignificantLogs,nslduration,nslThrottle,metricsRealtimeUpdate,metricsRealtimeUpdateDuration,maxCpsPerClient,trafficEnabled,useBridgeIpAsVip,useVipAsSnat,vsVipName,workflowRuntime,network_profile, virtual_service_uuid) ;]]></script>
		<in-binding>
			<bind name="Name" type="string" export-name="name">
				<description><![CDATA[Virtual service name]]></description>
			</bind>
			<bind name="poolgroupName" type="string"
				export-name="poolgroupName">
				<description><![CDATA[Poolgroup name]]></description>
			</bind>
			<bind name="ServerCloud" type="string"
				export-name="server_cloud">
				<description><![CDATA[Server cloud name]]></description>
			</bind>
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name ]]></description>
			</bind>
			<bind name="ApplicationProfile" type="string"
				export-name="application_profile">
				<description><![CDATA[Application profile name ]]></description>
			</bind>
			<bind name="servicePort" type="number"
				export-name="service_port">
				<description><![CDATA[Virtual service port]]></description>
			</bind>
			<bind name="SSLCertificate" type="string"
				export-name="SSL_certificate">
				<description><![CDATA[Existing SSL certificate name]]></description>
			</bind>
			<bind name="SSLCert" type="boolean" export-name="SSL_cert">
				<description><![CDATA[Use SSL certificate or not]]></description>
			</bind>
			<bind name="CertName" type="string" export-name="CertName">
				<description><![CDATA[New SSL certificate name]]></description>
			</bind>
			<bind name="CreateSSL" type="boolean"
				export-name="create_SSL_certificate">
				<description><![CDATA[Check create SSL certificate or not]]></description>
			</bind>
			<bind name="serviceEngine" type="string"
				export-name="service_engine">
				<description><![CDATA[Serviceengine group name]]></description>
			</bind>
			<bind name="poolOrPoolgroup" type="boolean"
				export-name="pool_or_pool_group">
				<description><![CDATA[Create pool or poolgroup]]></description>
			</bind>
			<bind name="poolName" type="string" export-name="poolName">
				<description><![CDATA[Newly created pool name]]></description>
			</bind>
			<bind name="vsVIP" type="boolean"
				export-name="use_existing_vs_vip">
				<description><![CDATA[VS Vip name]]></description>
			</bind>
			<bind name="existingVIP" type="string"
				export-name="existing_vip">
				<description><![CDATA[Existing Vs Vip name]]></description>
			</bind>
			<bind name="allowInvalidClientCert" type="boolean">
				<description><![CDATA[Allow invalid client cert]]></description>
			</bind>
			<bind name="closeClientConfigUpdate" type="boolean">
				<description><![CDATA[Add close client connection on config update]]></description>
			</bind>
			<bind name="description" type="string">
				<description><![CDATA[Add description for VS]]></description>
			</bind>
			<bind name="enableAutogw" type="boolean">
				<description><![CDATA[Add enable autogw]]></description>
			</bind>
			<bind name="enableRhi" type="boolean">
				<description><![CDATA[Add enable rhi]]></description>
			</bind>
			<bind name="enableRhiSnat" type="boolean">
				<description><![CDATA[Add enable_rhi snat]]></description>
			</bind>
			<bind name="ignPoolNetReach" type="boolean">
				<description><![CDATA[Ignore network reachability constraints for the server pool]]></description>
			</bind>
			<bind name="removeListeningPortOnVsDown" type="boolean">
				<description><![CDATA[Remove listening port if VirtualService is down]]></description>
			</bind>
			<bind name="scaleoutEcmp" type="boolean">
				<description><![CDATA[Disable re-distribution of flows across service engines for a virtual service]]></description>
			</bind>
			<bind name="clientIpAddr" type="string">
				<description><![CDATA[Client IP Address]]></description>
			</bind>
			<bind name="includeURL" type="string">
				<description><![CDATA[Add include URL for client log]]></description>
			</bind>
			<bind name="excludeURL" type="string">
				<description><![CDATA[Add exclude URL for client log]]></description>
			</bind>
			<bind name="addClientLogFliter" type="boolean">
				<description><![CDATA[Checkbox for  add client log fliter]]></description>
			</bind>
			<bind name="enabledClientLog" type="boolean">
				<description><![CDATA[Checkbox for enable client log]]></description>
			</bind>
			<bind name="clientStringRef" type="string">
				<description><![CDATA[Add string referencce for client log]]></description>
			</bind>
			<bind name="clientDuration" type="number">
				<description><![CDATA[Add client log duration]]></description>
			</bind>
			<bind name="logAllClientHeaders" type="boolean">
				<description><![CDATA[Checkbox for enabled all log headers]]></description>
			</bind>
			<bind name="analyticsProfile" type="string">
				<description><![CDATA[Select analytics profile]]></description>
			</bind>
			<bind name="clientInsights" type="string">
				<description><![CDATA[Add client insights for analytics profile logs]]></description>
			</bind>
			<bind name="significantLogThrottle" type="number">
				<description><![CDATA[Significant log throttle]]></description>
			</bind>
			<bind name="udfLogThrottle" type="number">
				<description><![CDATA[User defined filters log throttle]]></description>
			</bind>
			<bind name="nonSignificantLogs" type="boolean">
				<description><![CDATA[Non-significant logs]]></description>
			</bind>
			<bind name="nslduration" type="string">
				<description><![CDATA[Non-significant log duration]]></description>
			</bind>
			<bind name="nslThrottle" type="string">
				<description><![CDATA[Non-significant log throttle]]></description>
			</bind>
			<bind name="metricsRealtimeUpdate" type="boolean">
				<description><![CDATA[Real Time Metrics]]></description>
			</bind>
			<bind name="metricsRealtimeUpdateDuration" type="number">
				<description><![CDATA[Add metrics realtime update duration]]></description>
			</bind>
			<bind name="maxCpsPerClient" type="number">
				<description><![CDATA[Maximum connections per second per client IP]]></description>
			</bind>
			<bind name="trafficEnabled" type="boolean">
				<description><![CDATA[Add traffic_enabled or not]]></description>
			</bind>
			<bind name="useBridgeIpAsVip" type="boolean">
				<description><![CDATA[Use Bridge IP as VIP]]></description>
			</bind>
			<bind name="useVipAsSnat" type="boolean">
				<description><![CDATA[Use the Virtual IP as the SNAT IP for health monitoring]]></description>
			</bind>
			<bind name="vsVipName" type="string" export-name="vsVipName">
				<description><![CDATA[Name of the vsvip]]></description>
			</bind>
			<bind name="network_profile" type="string" />
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
			<bind name="virtual_service_uuid" type="string"
                export-name="virtual_service_uuid">
                <description><![CDATA[Uuid of virtual service object]]></description>
            </bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
		</out-binding>
		<position y="73.59090909090908" x="744.5" />
	</workflow-item>
	<workflow-item name="item8" out-name="item4"
		type="condition" alt-out-name="item7" comparator="0">
		<display-name><![CDATA[Decision]]></display-name>
		<script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (create_health_monitor == true) ;]]></script>
		<in-binding>
			<bind name="create_health_monitor" type="boolean"
				export-name="create_health_monitor" />
		</in-binding>
		<out-binding />
		<condition name="create_health_monitor" type="boolean"
			comparator="0" label="null">false</condition>
		<position y="63.59090909090908" x="245.0" />
	</workflow-item>
	<workflow-item name="item9" out-name="item1"
		type="condition" alt-out-name="item11" comparator="0">
		<display-name><![CDATA[Decision]]></display-name>
		<script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (create_SSL_certificate == false) ;]]></script>
		<in-binding>
			<bind name="create_SSL_certificate" type="boolean"
				export-name="create_SSL_certificate" />
		</in-binding>
		<out-binding />
		<condition name="create_SSL_certificate" type="boolean"
			comparator="1" label="null">false</condition>
		<position y="9.045454545454543" x="565.0" />
	</workflow-item>
	<workflow-item name="item11" out-name="item1" type="task"
		script-module="com.vmware.avi/createSSLCertificateObj">
		<display-name><![CDATA[createSSLCertificateObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createSSLCertificateObj(workflowRuntime,SSLAlgorithm,CommonName,RSAKeySize,ECKeySize,certificateBase,CertName,emailAddress,organizationUnit,organization,locality,state,country,distinguishedName) ;]]></script>
		<in-binding>
			<bind name="SSLAlgorithm" type="string"
				export-name="SSL_algorithm">
				<description><![CDATA[SSL algorithm type]]></description>
			</bind>
			<bind name="CommonName" type="string" export-name="common_name">
				<description><![CDATA[Common name for SSL certificate description]]></description>
			</bind>
			<bind name="RSAKeySize" type="string" export-name="RSA_key_size">
				<description><![CDATA[RSA key size]]></description>
			</bind>
			<bind name="ECKeySize" type="string" export-name="EC_key_size">
				<description><![CDATA[EC key size]]></description>
			</bind>
			<bind name="certificateBase" type="boolean">
				<description><![CDATA[States if the certificate is base64 encoded.]]></description>
			</bind>
			<bind name="CertName" type="string" export-name="CertName" />
			<bind name="state" type="string" />
			<bind name="organization" type="string" />
			<bind name="country" type="string" />
			<bind name="emailAddress" type="string" />
			<bind name="organizationUnit" type="string" />
			<bind name="locality" type="string" />
			<bind name="distinguishedName" type="string" />
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name]]></description>
			</bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime" />
		</out-binding>
		<position y="73.59090909090908" x="565.0" />
	</workflow-item>
	<workflow-item name="item10" out-name="item2" type="task"
		script-module="com.vmware.avi/finishVroWorkflow">
		<display-name><![CDATA[finishVroWorkflow]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").finishVroWorkflow(workflowRuntime) ;]]></script>
		<in-binding>
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime">
				<description><![CDATA[Workflow runtime object]]></description>
			</bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Any" export-name="createdObj" />
		</out-binding>
		<position y="19.045454545454543" x="745.0" />
	</workflow-item>
	<presentation>
		<p-step>
			<title><![CDATA[Basic details]]></title>
			<p-param name="controller">
				<desc><![CDATA[controller]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getVROControllerList").call()]]></p-qual>
			</p-param>
			<p-param name="server_cloud">
				<desc><![CDATA[server_cloud]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getExistingObjectsWithController").call( #controller , "cloud" )]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[VS details]]></title>
			<p-param name="name">
				<desc><![CDATA[name]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="application_profile">
				<desc><![CDATA[application_profile]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#HTTP#;#string#HTTPS#;#string#TCP#;#string#UDP#}#]]></p-qual>
			</p-param>
			<p-param name="use_existing_vs_vip">
				<desc><![CDATA[use_existing_vs_vip]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
			</p-param>
			<p-param name="existing_vip">
				<desc><![CDATA[existing_vip]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#use_existing_vs_vip == true]]></p-qual>
			</p-param>
			<p-param name="vip">
				<desc><![CDATA[VIP]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#use_existing_vs_vip == false]]></p-qual>
			</p-param>
			<p-param name="service_engine">
				<desc><![CDATA[service_engine]]></desc>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="SSL_cert">
				<desc><![CDATA[SSL_cert ]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="boolean"><![CDATA[#application_profile == "HTTPS" ? true : false ]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="create_SSL_certificate">
				<desc><![CDATA[create_SSL_certificate]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#application_profile == "HTTPS"]]></p-qual>
			</p-param>
			<p-param name="SSL_certificate">
				<desc><![CDATA[SSL_certificate]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#application_profile == "HTTPS" && #create_SSL_certificate==false]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#create_SSL_certificate==true || #application_profile != "HTTPS"]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#System-Default-Cert#;#string#System-Default-Cert-EC#}#]]></p-qual>
			</p-param>
			<p-param name="service_port">
				<desc><![CDATA[service_port]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="number"><![CDATA[#application_profile == "HTTP" ? "80" : "443"]]></p-qual>
			</p-param>
			<p-param name="pool_or_pool_group">
				<desc><![CDATA[pool_or_pool_group]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="tier1_lr">
				<desc><![CDATA[tier1_lr]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[GetAction("com.vmware.avi","getCloudType").call( #controller , #server_cloud, "isNsxtCloud" )]]></p-qual>
			</p-param>
			<p-param name="virtual_service_uuid">
			    <desc><![CDATA[Virtual Service Uuid]]></desc>
			    <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","fetchUuidbyName").call( #controller , "virtualservice" , #name )]]></p-qual>
			    <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="vsvip_uuid">
			    <desc><![CDATA[VsVip Uuid]]></desc>
			    <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","fetchUuidbyName").call( #controller , "vsvip" , #vsVipName )]]></p-qual>
			    <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[SSL Cert]]></title>
			<p-param name="SSL_algorithm">
				<desc><![CDATA[SSL_algorithm]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#RSA#;#string#EC#}#]]></p-qual>
			</p-param>
			<p-param name="RSA_key_size">
				<desc><![CDATA[RSA_key_size]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#SSL_algorithm=="RSA"]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#1024 Bits#;#string#3072 Bits#;#string#4096 Bits#;#string#2048 Bits#}#]]></p-qual>
			</p-param>
			<p-param name="EC_key_size">
				<desc><![CDATA[EC_key_size]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#SSL_algorithm=="EC"]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#SECP256R1#;#string#SECP521R1#;#string#SECP384R1#}#]]></p-qual>
			</p-param>
			<p-param name="common_name">
				<desc><![CDATA[common_name]]></desc>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[PG details]]></title>
			<p-param name="fail_action_type">
				<desc><![CDATA[fail_action_type]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "failActionType" , #application_profile , #resourceElement )]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Close Connection#;#string#HTTP Redirect#}#]]></p-qual>
			</p-param>
			<p-param name="status_code">
				<desc><![CDATA[status_code]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#301#;#string#302#;#string#307#}#]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#fail_action_type=="HTTP Redirect"]]></p-qual>
			</p-param>
			<p-param name="protocol">
				<desc><![CDATA[protocol]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#HTTP#;#string#HTTPS#}#]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#fail_action_type=="HTTP Redirect"]]></p-qual>
			</p-param>
			<p-param name="fail_action_URL">
				<desc><![CDATA[fail_action_URL]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#fail_action_type=="HTTP Redirect"]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Pool details]]></title>
			<p-param name="lb_algorithm">
				<desc><![CDATA[lb_algorithm]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#poolOrPoolgrous != true]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Least Connections#;#string#Round Robin#;#string#Least Load#;#string#Fewest Servers#;#string#Consistent Hash#;#string#Fastest Response#;#string#Core Affinity#}#]]></p-qual>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "lbAlgorithm" , #application_profile , #resourceElement )]]></p-qual>
			</p-param>
			<p-param name="lb_consistent_hash">
				<desc><![CDATA[lb_consistent_hash]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lb_algorithm == "Consistent Hash "]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Source IP Address #;#string#Source IP Address And Port #;#string#Callid#;#string#URI #;#string#Custom String#;#string#Custom Header#}#]]></p-qual>
			</p-param>
			<p-param name="lb_custom_header_name">
				<desc><![CDATA[lb_custom_header_name]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lb_consistent_hash == "Custom Header"]]></p-qual>
			</p-param>
			<p-param name="create_health_monitor">
				<desc><![CDATA[create_health_monitor]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
			</p-param>
			<p-param name="health_monitor">
				<desc><![CDATA[health_monitor]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[false]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="Array/string"><![CDATA[#{#string#System-Ping#}#]]></p-qual>
			</p-param>
			<p-param name="pool_uuid">
                <desc><![CDATA[Pool Uuid]]></desc>
                <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","fetchUuidbyName").call( #controller , "pool" , #poolName )]]></p-qual>
                <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
            </p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Healthmonitor details]]></title>
			<p-param name="health_monitor_type">
				<desc><![CDATA[health_monitor_type ]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#TCP#;#string#HTTPS#;#string#External#;#string#UDP#;#string#DNS#;#string#HTTP#;#string#Ping#}#]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#create_health_monitor==true ]]></p-qual>
			</p-param>
			<p-param name="command">
				<desc><![CDATA[command]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="External"]]></p-qual>
			</p-param>
			<p-param name="request">
				<desc><![CDATA[request]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="UDP" || #health_monitor_type=="DNS"]]></p-qual>
			</p-param>
			<p-param name="http_response_code">
				<desc><![CDATA[http_ response_code]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="HTTP"]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/Array/string"><![CDATA[#{#string#1XX#;#string#2XX#;#string#3XX#;#string#4XX#;#string#5XX#;#string#ANY#}#]]></p-qual>
			</p-param>
			<p-param name="https_response_code">
				<desc><![CDATA[https_ response_code]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="HTTPS"]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#1XX#;#string#2XX#;#string#3XX#;#string#4XX#;#string#5XX#;#string#ANY#}#]]></p-qual>
			</p-param>
			<p-param name="health_monitor_uuid">
                <desc><![CDATA[health_monitor_uuid]]></desc>
                <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","fetchUuidbyName").call( #controller , "healthmonitor" , #HealthMonitorName )]]></p-qual>
                <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
            </p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Server details]]></title>
			<p-param name="add_servers">
				<desc><![CDATA[add_servers]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#IP Address#;#string#Select by network#;#string#IP Group#}#]]></p-qual>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="add_existing_server_ips">
				<desc><![CDATA[add_existing_server_ips]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_servers == "Select by network"]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_servers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="ip_group">
				<desc><![CDATA[ip_group]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_servers=="IP Group"]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "ipaddrgroup" , #Tenant , "" , #version )]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_servers!="IP Group"]]></p-qual>
			</p-param>
			<p-param name="pg_name">
				<desc><![CDATA[pg_name]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_existing_server_ips == true ]]></p-qual>
				<p-qual kind="ognl" name="defaultValue" type="string"><![CDATA[""]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_existing_server_ips != true || #add_servers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="network">
				<desc><![CDATA[network]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[ #add_existing_server_ips == true ]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "vimgrnwruntime" , #Tenant , #pg_name , #version )]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_existing_server_ips != true || #add_servers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="pool_servers">
				<desc><![CDATA[pool_servers]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchServerIP").call( #controller , #Tenant , #add_servers , #ip_group , #network , #add_existing_server_ips )]]></p-qual>
			</p-param>
			<p-param name="port">
				<desc><![CDATA[port]]></desc>
			</p-param>
			<p-param name="add_persistence_profile_ref">
				<desc><![CDATA[add_persistence_profile_ref]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[__NULL__]]></p-qual>
			</p-param>
			<p-param name="persistence_profile_ref">
				<desc><![CDATA[persistence_profile_ref]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getExistingObjectsWithController").call( #controller , "applicationpersistenceprofile" )]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_persistence_profile_ref==true]]></p-qual>
			</p-param>
			<p-param name="server_type">
				<desc><![CDATA[server_type]]></desc>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="string"><![CDATA[V4]]></p-qual>
			</p-param>
		</p-step>
	</presentation>
</workflow>