<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd"
	root-name="item1" object-name="workflow:name=generic"
	id="4e6193ee-6a1d-4ffe-880d-ffad736cf9af" version="3.0.3"
	api-version="6.0.0" allowed-operations="vef" restartMode="1"
	resumeFromFailedMode="0">
	<display-name><![CDATA[Create Pool]]></display-name>
	<position y="9.545454545454543" x="5.0"></position>
	<input>
		<param name="name" type="string">
			<description><![CDATA[name]]></description>
		</param>
		<param name="controller" type="string">
			<description><![CDATA[controller]]></description>
		</param>
		<param name="server_cloud" type="string">
			<description><![CDATA[server_cloud]]></description>
		</param>
		<param name="pool_servers" type="Array/string">
			<description><![CDATA[pool_servers]]></description>
		</param>
		<param name="create_health_monitor" type="boolean">
			<description><![CDATA[create_health_monitor]]></description>
		</param>
		<param name="add_servers" type="string">
			<description><![CDATA[add_servers]]></description>
		</param>
		<param name="ip_group" type="string">
			<description><![CDATA[ip_group]]></description>
		</param>
		<param name="network" type="string">
			<description><![CDATA[network]]></description>
		</param>
		<param name="add_existing_server_ips" type="boolean">
			<description><![CDATA[add_existing_server_ips]]></description>
		</param>
		<param name="pg_name" type="string">
			<description><![CDATA[pg_name]]></description>
		</param>
		<param name="lb_algorithm" type="string">
			<description><![CDATA[lb_algorithm]]></description>
		</param>
		<param name="lb_consistent_hash" type="string">
			<description><![CDATA[lb_consistent_hash]]></description>
		</param>
		<param name="lb_custom_header_name" type="string">
			<description><![CDATA[lb_custom_header_name]]></description>
		</param>
		<param name="server_type" type="string">
			<description><![CDATA[server_type]]></description>
		</param>
		<param name="health_monitor_type" type="string">
			<description><![CDATA[health_monitor_type]]></description>
		</param>
		<param name="command" type="string">
			<description><![CDATA[command]]></description>
		</param>
		<param name="request" type="string">
			<description><![CDATA[request]]></description>
		</param>
		<param name="http_response_code" type="Array/string">
			<description><![CDATA[http_response_code]]></description>
		</param>
		<param name="https_response_code" type="Array/string">
			<description><![CDATA[https_response_code]]></description>
		</param>
		<param name="port" type="string">
			<description><![CDATA[port]]></description>
		</param>
		<param name="persistence_profile_ref" type="string">
			<description><![CDATA[persistence_profile_ref]]></description>
		</param>
		<param name="add_persistence_profile_ref" type="boolean">
			<description><![CDATA[add_persistence_profile_ref]]></description>
		</param>
		<param name="tier1_lr" type="string"></param>
	</input>
	<output>
		<param name="actionResult" type="Any"></param>
	</output>
	<attrib name="configErrorCode" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="actionEerrorCode" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="HealthMonitorName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Set the healthmonitor name ]]></description>
	</attrib>
	<attrib name="version" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[AVI api version]]></description>
	</attrib>
	<attrib name="status_code" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[status_code]]></description>
	</attrib>
	<attrib name="protocol" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[protocol]]></description>
	</attrib>
	<attrib name="fail_action_URL" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[fail_action_URL]]></description>
	</attrib>
	<attrib name="fail_action_type" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[fail_action_type]]></description>
	</attrib>
	<attrib name="workflowRuntime" type="Avi:WorkflowRuntime"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="Tenant" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Tenant]]></description>
	</attrib>
	<attrib name="createdObj" type="Any" read-only="false">
		<value encoded="n"><![CDATA[Any#__NULL__]]></value>
	</attrib>
	<workflow-item name="item0"
		throw-bind-name="actionEerrorCode" type="end" end-mode="0">
		<in-binding></in-binding>
		<position y="72.68181818181817" x="704.5"></position>
	</workflow-item>
	<workflow-item name="item6" out-name="item5"
		throw-bind-name="configErrorCode" type="task">
		<display-name><![CDATA[AVIObjectName]]></display-name>
		<script encoded="false"><![CDATA[HealthMonitorName = Name+"_HealthMonitor"
Tenant=workflowRuntime.getAviVroClient().cred.tenant
version=workflowRuntime.getAviVroClient().cred.version


]]></script>
		<in-binding>
			<bind name="Name" type="string" export-name="name">
				<description><![CDATA[Add virtualservice name]]></description>
			</bind>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName"></bind>
			<bind name="version" type="string" export-name="version"></bind>
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime"></bind>
		</in-binding>
		<out-binding>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName"></bind>
			<bind name="Tenant" type="string" export-name="Tenant"></bind>
			<bind name="version" type="string" export-name="version"></bind>
		</out-binding>
		<position y="82.68181818181817" x="104.5"></position>
	</workflow-item>
	<workflow-item name="item1" out-name="item6" type="task"
		script-module="com.vmware.avi/initVroWorkflow">
		<display-name><![CDATA[initVroWorkflow]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").initVroWorkflow(controller) ;]]></script>
		<in-binding>
			<bind name="controller" type="string" export-name="controller">
				<description><![CDATA[Controller IP]]></description>
			</bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime"></bind>
		</out-binding>
		<position y="19.545454545454543" x="105.0"></position>
	</workflow-item>
	<workflow-item name="item3" out-name="item4" type="task"
		script-module="com.vmware.avi/createHealthMonitorObj">
		<display-name><![CDATA[createHealthMonitorObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createHealthMonitorObj(healthMonitorType,hm_type,hm_name,hm_description,is_federated,monitor_port,time_out,send_interval,successful_check,failed_check,command_code,udp_request,dns_query_name,http_response_code,tcp_request,tcp_response,tcp_half_open,maintenance_code,workflowRuntime,https_response_code, Tenant) ;]]></script>
		<in-binding>
			<bind name="healthMonitorType" type="string"
				export-name="health_monitor_type"></bind>
			<bind name="hm_type" type="string"
				export-name="health_monitor_type"></bind>
			<bind name="hm_name" type="string"
				export-name="HealthMonitorName"></bind>
			<bind name="hm_description" type="string"
				explicitly-not-bound="true"></bind>
			<bind name="is_federated" type="boolean"
				explicitly-not-bound="true"></bind>
			<bind name="monitor_port" type="number"
				explicitly-not-bound="true"></bind>
			<bind name="time_out" type="number" explicitly-not-bound="true"></bind>
			<bind name="send_interval" type="number"
				explicitly-not-bound="true"></bind>
			<bind name="successful_check" type="number"
				explicitly-not-bound="true"></bind>
			<bind name="failed_check" type="number"
				explicitly-not-bound="true"></bind>
			<bind name="command_code" type="string" export-name="command"></bind>
			<bind name="udp_request" type="string" export-name="request"></bind>
			<bind name="dns_query_name" type="string" export-name="request"></bind>
			<bind name="http_response_code" type="Array/string"
				export-name="http_response_code"></bind>
			<bind name="tcp_request" type="string" export-name="request"></bind>
			<bind name="tcp_response" type="string"
				explicitly-not-bound="true"></bind>
			<bind name="tcp_half_open" type="boolean"
				explicitly-not-bound="true"></bind>
			<bind name="maintenance_code" type="string"
				explicitly-not-bound="true"></bind>
			<bind name="https_response_code" type="Array/string"
				export-name="https_response_code"></bind>
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name]]></description>
			</bind>
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime"></bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime"></bind>
		</out-binding>
		<position y="82.68181818181817" x="224.5"></position>
	</workflow-item>
	<workflow-item name="item4" out-name="item7" type="task"
		script-module="com.vmware.avi/createPoolObj">
		<display-name><![CDATA[createPoolObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createPoolObj(PoolServers,enablePool,CreateHealthMonitor,poolName,defaultServerPort,loadBalancerAlgo,serverType,lbConsistentHash,lbCustomHeaderName,ServerCloud,Tenant,HealthMonitorName,healthMonitor,Version,activePassiveHM,capacityEstimation,capacityEstimationThresh,cloudConfigCksum,deleteServerRefresh,gracefulDisableTimeout,hostCheckEnabled,lookupServerByName,rewriteHostHeaderServerName,maxConcurrentConnectionsPerServer,domainName,fewestTasksFeedbackDelay,connectionRampDuration,upstreamConnpoolConnIdleTmo,upstreamConnpoolConnLifeTmo,upstreamConnpoolConnMaxReuse,upstreamConnpoolServerMaxCache,requestQueueEnabled,useServicePort,sniEnabled,serverTimeout,enableRealtimeMetrics,statusCode,failActionURL,statusProtocol,failActiontype,workflowRuntime,PersistenceProfileRef,ratio,port,addPersistenceProfileRef,tier1_lr) ;]]></script>
		<in-binding>
			<bind name="PoolServers" type="Array/string"
				export-name="pool_servers">
				<description><![CDATA[Pool servers list ]]></description>
			</bind>
			<bind name="enablePool" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Pool status]]></description>
			</bind>
			<bind name="CreateHealthMonitor" type="boolean"
				export-name="create_health_monitor">
				<description><![CDATA[Check create healthmonitor or not]]></description>
			</bind>
			<bind name="poolName" type="string" export-name="name">
				<description><![CDATA[Pool name]]></description>
			</bind>
			<bind name="defaultServerPort" type="string"
				explicitly-not-bound="true">
				<description><![CDATA[Default server port]]></description>
			</bind>
			<bind name="loadBalancerAlgo" type="string"
				export-name="lb_algorithm">
				<description><![CDATA[Pool LB algorithm type]]></description>
			</bind>
			<bind name="serverType" type="string" export-name="server_type">
				<description><![CDATA[Server type]]></description>
			</bind>
			<bind name="lbConsistentHash" type="string"
				export-name="lb_consistent_hash">
				<description><![CDATA[Consistent hash data for load balancer algorithm type is consistent hash]]></description>
			</bind>
			<bind name="lbCustomHeaderName" type="string"
				export-name="lb_custom_header_name">
				<description><![CDATA[Custom headers consistent hash type]]></description>
			</bind>
			<bind name="ServerCloud" type="string"
				export-name="server_cloud">
				<description><![CDATA[Servercloud name]]></description>
			</bind>
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name]]></description>
			</bind>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName">
				<description><![CDATA[New healthmonitor name]]></description>
			</bind>
			<bind name="healthMonitor" type="Array/string"
				explicitly-not-bound="true">
				<description><![CDATA[List of existing healthmonitors name]]></description>
			</bind>
			<bind name="Version" type="string" export-name="version">
				<description><![CDATA[Avi api version]]></description>
			</bind>
			<bind name="activePassiveHM" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Active passive healthmonitor]]></description>
			</bind>
			<bind name="capacityEstimation" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Add capacity estimation]]></description>
			</bind>
			<bind name="capacityEstimationThresh" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Add capacity estimation thresh]]></description>
			</bind>
			<bind name="cloudConfigCksum" type="string"
				explicitly-not-bound="true">
				<description><![CDATA[Add cloud config cksum ]]></description>
			</bind>
			<bind name="deleteServerRefresh" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Delete server on dns refresh]]></description>
			</bind>
			<bind name="gracefulDisableTimeout" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Add graceful disable timeout]]></description>
			</bind>
			<bind name="hostCheckEnabled" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Add host check enabled]]></description>
			</bind>
			<bind name="lookupServerByName" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Add lookup server by name]]></description>
			</bind>
			<bind name="rewriteHostHeaderServerName" type="boolean"
				export-name="create_health_monitor">
				<description><![CDATA[Add rewrite host header server name]]></description>
			</bind>
			<bind name="maxConcurrentConnectionsPerServer" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Add max concurrent connections per server]]></description>
			</bind>
			<bind name="domainName" type="string"
				explicitly-not-bound="true">
				<description><![CDATA[Add domain name]]></description>
			</bind>
			<bind name="fewestTasksFeedbackDelay" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Add fewest tasks feedback delay]]></description>
			</bind>
			<bind name="connectionRampDuration" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Connection ramp]]></description>
			</bind>
			<bind name="upstreamConnpoolConnIdleTmo" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Connection Idle Timeout]]></description>
			</bind>
			<bind name="upstreamConnpoolConnLifeTmo" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Connection Life Timeout]]></description>
			</bind>
			<bind name="upstreamConnpoolConnMaxReuse" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Connection Max Used Times]]></description>
			</bind>
			<bind name="upstreamConnpoolServerMaxCache" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Max Cache Connections Per Server]]></description>
			</bind>
			<bind name="requestQueueEnabled" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Add request queue enabled]]></description>
			</bind>
			<bind name="useServicePort" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Disable Port Translation]]></description>
			</bind>
			<bind name="sniEnabled" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Add sni enabled]]></description>
			</bind>
			<bind name="serverTimeout" type="number"
				explicitly-not-bound="true">
				<description><![CDATA[Default Server Timeout]]></description>
			</bind>
			<bind name="enableRealtimeMetrics" type="boolean"
				explicitly-not-bound="true">
				<description><![CDATA[Enable real time metrics]]></description>
			</bind>
			<bind name="statusCode" type="string" export-name="status_code">
				<description><![CDATA[Status code for fail action type of pool]]></description>
			</bind>
			<bind name="failActionURL" type="string"
				export-name="fail_action_URL">
				<description><![CDATA[Redirect url for fail action type of pool]]></description>
			</bind>
			<bind name="statusProtocol" type="string" export-name="protocol">
				<description><![CDATA[Add status protocol for pool fail action]]></description>
			</bind>
			<bind name="failActiontype" type="string"
				export-name="fail_action_type">
				<description><![CDATA[Pool fail action type]]></description>
			</bind>
			<bind name="PersistenceProfileRef" type="string"
				export-name="persistence_profile_ref"></bind>
			<bind name="port" type="string" export-name="port"></bind>
			<bind name="ratio" type="number" explicitly-not-bound="true"></bind>
			<bind name="addPersistenceProfileRef" type="boolean"
				export-name="add_persistence_profile_ref"></bind>
			<bind name="tier1_lr" type="string" export-name="tier1_lr"></bind>
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime"></bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime"></bind>
		</out-binding>
		<position y="19.045454545454543" x="364.5"></position>
	</workflow-item>
	<workflow-item name="item5" out-name="item3"
		type="condition" alt-out-name="item4" comparator="0">
		<display-name><![CDATA[Decision]]></display-name>
		<script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (create_health_monitor == true) ;]]></script>
		<in-binding>
			<bind name="create_health_monitor" type="boolean"
				export-name="create_health_monitor"></bind>
		</in-binding>
		<out-binding></out-binding>
		<condition name="create_health_monitor" type="boolean"
			comparator="0" label="null">false</condition>
		<position y="9.045454545454543" x="225.0"></position>
	</workflow-item>
	<workflow-item name="item7" out-name="item2" type="task"
		script-module="com.vmware.avi/finishVroWorkflow">
		<display-name><![CDATA[finishVroWorkflow]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").finishVroWorkflow(workflowRuntime) ;]]></script>
		<in-binding>
			<bind name="workflowRuntime" type="Avi:WorkflowRuntime"
				export-name="workflowRuntime">
				<description><![CDATA[Workflow runtime object]]></description>
			</bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Any" export-name="actionResult"></bind>
		</out-binding>
		<position y="82.68181818181817" x="365.0"></position>
	</workflow-item>
	<workflow-item name="item2" out-name="item0" type="task">
		<display-name><![CDATA[Created object]]></display-name>
		<script encoded="false"><![CDATA[System.log("Pool created successfully."+ createdObj)]]></script>
		<in-binding>
			<bind name="createdObj" type="Any" export-name="createdObj"></bind>
		</in-binding>
		<out-binding></out-binding>
		<position y="82.68181818181817" x="504.5"></position>
	</workflow-item>
	<presentation>
		<p-step>
			<title><![CDATA[Basic details]]></title>
			<p-param name="controller">
				<desc><![CDATA[controller]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getVROControllerList").call()]]></p-qual>
			</p-param>
			<p-param name="server_cloud">
				<desc><![CDATA[server_cloud]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getExistingObjectsWithController").call( #controller , "cloud" )]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Pool details]]></title>
			<p-param name="name">
				<desc><![CDATA[name]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="lb_algorithm">
				<desc><![CDATA[lb_algorithm]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#poolOrPoolgrous != true]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Least Connections#;#string#Round Robin#;#string#Least Load#;#string#Fewest Servers#;#string#Consistent Hash#;#string#Fastest Response#;#string#Core Affinity#}#]]></p-qual>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "lbAlgorithm" , #ApplicationProfile , #resourceElement )]]></p-qual>
			</p-param>
			<p-param name="lb_consistent_hash">
				<desc><![CDATA[lb_consistent_hash]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lb_algorithm == "Consistent Hash "]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Source IP Address #;#string#Source IP Address And Port #;#string#Callid#;#string#URI #;#string#Custom String#;#string#Custom Header#}#]]></p-qual>
			</p-param>
			<p-param name="lb_custom_header_name">
				<desc><![CDATA[lb_custom_header_name]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lb_consistent_hash == "Custom Header"]]></p-qual>
			</p-param>
			<p-param name="create_health_monitor">
				<desc><![CDATA[create_health_monitor]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
			</p-param>
			<p-param name="tier1_lr">
				<desc><![CDATA[tier1_lr]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[GetAction("com.vmware.avi","getCloudType").call( #controller , #server_cloud )]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Healthmonitor details]]></title>
			<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#create_health_monitor==true]]></p-qual>
			<p-param name="health_monitor_type">
				<desc><![CDATA[health_monitor_type ]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#TCP#;#string#HTTPS#;#string#External#;#string#UDP#;#string#DNS#;#string#HTTP#;#string#Ping#}#]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#create_health_monitor==true ]]></p-qual>
			</p-param>
			<p-param name="command">
				<desc><![CDATA[command]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="External"]]></p-qual>
			</p-param>
			<p-param name="request">
				<desc><![CDATA[request]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="UDP" || #health_monitor_type=="DNS"]]></p-qual>
			</p-param>
			<p-param name="http_response_code">
				<desc><![CDATA[http_respose_code]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="HTTP"]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/Array/string"><![CDATA[#{#string#1XX#;#string#2XX#;#string#3XX#;#string#4XX#;#string#5XX#;#string#ANY#}#]]></p-qual>
			</p-param>
			<p-param name="https_response_code">
				<desc><![CDATA[https_response_code]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#health_monitor_type=="HTTPS"]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/Array/string"><![CDATA[#{#string#1XX#;#string#2XX#;#string#3XX#;#string#4XX#;#string#5XX#;#string#ANY#}#]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Server details]]></title>
			<p-param name="add_servers">
				<desc><![CDATA[add_servers]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#IP Address#;#string#Select by network#;#string#IP Group#}#]]></p-qual>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="add_existing_server_ips">
				<desc><![CDATA[add_existing_server_ips]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_servers == "Select by network"]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_servers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="ip_group">
				<desc><![CDATA[ip_group]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_servers=="IP Group"]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "ipaddrgroup" , #Tenant , "" , #version )]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_servers!="IP Group"]]></p-qual>
			</p-param>
			<p-param name="pg_name">
				<desc><![CDATA[pg_name]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_existing_server_ips == true ]]></p-qual>
				<p-qual kind="ognl" name="defaultValue" type="string"><![CDATA[""]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_existing_server_ips != true || #add_servers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="network">
				<desc><![CDATA[network]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[ #add_existing_server_ips == true ]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "vimgrnwruntime" , #Tenant , #pg_name , #version )]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#add_existing_server_ips != true || #add_servers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="pool_servers">
				<desc><![CDATA[pool_servers]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchServerIP").call( #controller , #Tenant , #add_servers , #ip_group , #network , #add_existing_server_ips )]]></p-qual>
			</p-param>
			<p-param name="port">
				<desc><![CDATA[port]]></desc>
			</p-param>
			<p-param name="add_persistence_profile_ref">
				<desc><![CDATA[add_persistence_profile_ref]]></desc>
			</p-param>
			<p-param name="persistence_profile_ref">
				<desc><![CDATA[persistence_profile_ref]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getExistingObjectsWithController").call( #controller , "applicationpersistenceprofile" )]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#add_persistence_profile_ref==true]]></p-qual>
			</p-param>
			<p-param name="server_type">
				<desc><![CDATA[server_type]]></desc>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="string"><![CDATA[V4]]></p-qual>
			</p-param>
		</p-step>
	</presentation>
</workflow>